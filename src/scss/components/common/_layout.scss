
// VARS
$circle-width: 0.09em;
$circle-width-hover: 0.07em;
$nav-width:210px;
// colors default
$primary-color: #2d2d2d;
$secondary-color: #ccc;
$bg-color: #f5f5f5;
$bg-nav: #575E62;
$bg-main: #F3F3F3;

//Nav

.main-nav {
	background:$bg-nav;
	width: 210px;
	position: fixed;
	height:100vh ;
	left: 0;
	top:0;
}

.main-area {
	background-color: $bg-main;
	position: relative;
	width: calc(100% - $nav-width);
	min-height: 100vh;
	margin-left: $nav-width;
}




// CIRCLE
// classes 2 extend
.rect-auto{
	clip: rect(auto, auto, auto, auto);
}

.pie {
	position: absolute;
	border: $circle-width solid $primary-color;
	width: 1 - (2 * $circle-width);
	height: 1 - (2 * $circle-width);
	clip: rect(0em, 0.5em, 1em, 0em);
	border-radius: 50%;
	transform: rotate(0deg);
}



.pie-fill {
	transform: rotate(180deg);
}


// main
.block-kpi,
.c100 {

	*, *:before, *:after {
		box-sizing:content-box;
	}

	position: relative;
	width: 1em;
	height: 1em;
	border-radius: 50%;
	margin: 0 0.1em 0.1em 0;
	background-color: $secondary-color;
   font-size: 150px;
   &.blue {
      background-color: #4893b2;
      .fill,
      .pie {
         border: $circle-width solid #0f3b4d!important;
      }
   }  
   &.orange {
      background-color: #f7cba0;
      .fill,
      .pie {
         border: $circle-width solid #bf6f22!important;
      }    
   }
   &.grey {
      background-color: #a6acb3;
      .fill,
      .pie {
         border: $circle-width solid #50555a!important;
      }     
   }
   &.green {
      background-color: #8ec7b2;
      .fill,
      .pie {
         border: $circle-width solid #3a6555!important;
      }     
   }
	// center circle to its parent
	&.center{
		float: none;
		margin: 0 auto;
	}
	// centered value inside circle
	> span {
		position: absolute;
		width: 100%;
		z-index: 1;
		font-size: 12px;
      color: $color-primary-dark;
      font-weight: bold;
      display: block;
      margin: auto;
      left: 0;
      right: 0;
      top:0;
      bottom: 0;
      height: 20px;
		text-align: center;
      white-space: nowrap;
      transition: all .2s linear;
	}

	// background inside the circle
	&:after{
		position: absolute;
		top: $circle-width;
		left: $circle-width;
		display: block;
		content: " ";
		border-radius: 50%;
		background-color: $bg-color;
		width: 1 - (2 * $circle-width);
      height: 1 - (2 * $circle-width);
      transition: all .4s linear;
      filter: drop-shadow(5px 5px 4px rgba(0, 0, 0, 0.8));
	}

	// the slice (mask)
	.slice {
		position: absolute;
		width: 1em;
		height: 1em;
		clip: rect(0em, 1em, 1em, 0.5em);
	}

	// circle to show the status
	.bar {
		@extend .pie;
	}


   // loop to create all needed elements automatically
   @for $j from 0 through 50 {
      &[data-percentaje='#{$j}'] .fill,
		&.p#{$j} .fill{
			display: none;
		}
   }
	@for $j from 51 through 100 {
      &[data-percentaje='#{$j}'] .slice,
		&.p#{$j} .slice {
			@extend .rect-auto;
		}
      &[data-percentaje='#{$j}'] .bar:after,
		&.p#{$j} .bar:after{
			@extend .pie-fill;
		}
      &[data-percentaje='#{$j}'] .fill,
		&.p#{$j} .fill{
			@extend .pie;
			@extend .pie-fill;
		}

	}

	// loop to rotate all 100 circles
	@for $j from 1 through 100 {
      &[data-percentaje='#{$j}'] .bar,
		&.p#{$j} .bar {
			transform: rotate((360/100*$j) + deg);
		}
   }
   
	// hover styles
	&:hover{

		cursor: default;

		> span {

		}

		&:after{
		//	top: $circle-width-hover;
		//	left: $circle-width-hover;
		//	width: 1 - (2 * $circle-width-hover);
		//	height: 1 - (2 * $circle-width-hover);
		}

	}

}